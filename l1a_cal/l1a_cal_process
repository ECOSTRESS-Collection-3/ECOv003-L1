#! /usr/bin/env python
#
# This runs the L1A Cal process.

import geocal
import ecostress
import os
import re

# Get version information, in the top directory
import sys
sys.path.append(os.path.dirname(os.path.abspath(sys.path[0])))
from ecostress_version import *

version = "1.0"
usage='''Usage:
  l1a_cal_process [options] <run_config>
  l1a_cal_process [options] <l1a_bb> <l1a_raw_pix> <osp_dir> <prod_dir>
  l1a_cal_process -h | --help
  l1a_cal_process -v | --version

This runs the L1A Cal process.

Options:
  -h --help         
       Print this message

  --verbose
       Print more information as we run to stdout.

  -v --version      
       Print program version
'''

args = geocal.docopt_simple(usage, version=version)

# Can use this to wait a short time so we can attach strace to this
# process, useful to find all the files that we are accessing.
if(False):
    print("Waiting a short time")
    import time
    time.sleep(20)

# Explicitly list input file
if(args.run_config):
    config = ecostress.RunConfig(args.run_config)
    l1a_bb = os.path.abspath(config["InputFileGroup", "L1A_BB"])
    l1a_raw_pix = os.path.abspath(config["InputFileGroup", "L1A_RAW_PIX"])
    l1_osp_dir = os.path.abspath(config["StaticAncillaryFileGroup", "L1_OSP_DIR"])
    dirname = config["ProductPathGroup", "ProductPath"]
    file_version = config["ProductPathGroup", "ProductCounter"]
    build_id = config["PrimaryExecutable", "BuildID"]
else:
    config = None
    l1a_bb = os.path.abspath(args.l1a_bb)
    l1a_raw_pix = os.path.abspath(args.l1a_raw_pix)
    l1_osp_dir = os.path.abspath(args.osp_dir)
    dirname = os.path.abspath(args.prod_dir)
    file_version = "01"
    
quiet = not args.verbose

geocal.makedirs_p(dirname)
os.chdir(dirname)

orbit, scene, acquisition_time = ecostress.orbit_from_metadata(l1a_raw_pix)
ofile = ecostress.ecostress_file_name("L1A_PIX", orbit, scene, acquisition_time,
                            build = build_id, version = file_version)
ofile_gain = ecostress.ecostress_file_name("L1A_RAD_GAIN", orbit, scene,
                                 acquisition_time,
                                 build = build_id, version = file_version,
                                 intermediate = True)
log_fname = os.path.splitext(ofile)[0] + ".log"
log = open(log_fname, "w")
try:
# Generate output
    l1apix = ecostress.L1aPixGenerate(l1a_bb, l1a_raw_pix, l1_osp_dir,
                            ofile, ofile_gain,
                            log=log, quiet=quiet, run_config=config,
                            build_id=build_id,
                            pge_version=pge_version["l1a_cal"],
                            file_version=file_version)
    l1apix.run()
    # Write out a dummy log file
    print("L1A_CAL_PGE:INFO-0-[Job Successful]", file=log)
    log.flush()
except geocal.VicarRunException as e:
    print("L1A_CAL_PGE:ERROR-1-[%s]" % e.message, file=log)
    log.flush()
    raise
except:
    print("L1A_CAL_PGE:ERROR-2-[Unexpected Error]", file=log)
    log.flush()
    raise


