!***Program Name:
!   el1a_2pt.pdf (Ecostress L1A Two-Point conversion)
!   An L1A_CAL PGE Program supporting the ECOSTRESS Project
!   Written for VICAR with TAE scripting.
!***Date/Version:
!   18JAN2018 Version: 1.00 T.L.Logan (TVAC changes)
!***Function:
!   ECOSTRESS L1A 2point conversion of Blackbody calibration and TIR
!     image DN to Radiance (watts/m2/sr/um).
!   TIR Bands 2-6; SWIR image (B1) is Dark Current subtracted.
!   This proc is called separately (by el1a_bbcal.pdf) for each Band.
!***Note: Input missing, fill or bad data are output as code -9999,
!   Except for stripes, which are output as code -9998.
procedure
!Progam Parameters****************************************************
!User Supplied Parameters:
parm   inph5i string   def=""
parm   inph5b string   def=""
parm   inprad string   def="" !BlackBodyRadiance !Directory for fpa radiance
parm   outimg string   def="" !UncalibratedDN    !Directory for image DN
parm   outbdn string   def="" !BlackBodyDN       !Directory for fpa DN
parm   outwat string   def="" !ImgRadiance       !Transfer dir for L1A_RAD
parm   outp1  string   def="" !                  !Output dir for L1A-PIX HD5
parm   band   integer  def=1 valid=(1:6) !TIR Bands 2-6 & SWIR B1
parm   rad2k  integer  def=1 valid=(0:1) !Convert radiance to Kelvin. 0=No; 1=Yes
parm   radout integer  def=1 valid=(0:1) !Output radiance image. 0=No; 1=Yes
parm   debug  integer  def=1 valid=(0:2) !Verbose Messages; 0=No;1=Yes;2=Yes+del-x
parm   cw     real     !Center WaveLength
parm   c1     real     !First Planck Constant (1.191042E08)
parm   c2     real     !Second Planck Constant (14387.752)
parm   suffix string   !Scene ID suffix
!Local Parameters:
local  id     string   !Unique variable name
local  nl     integer
local  ns     integer
local  format keyword
local  hdf    string   init=".h5"
local  found  integer  !0=no file; 1=file found
local  sd     real     !Histogram standard deviation
local  avg    real     !Histogram mean
local  count  integer  !Histogram number of elements
body
let      _onfail="goto error1"
file2tcl  xxjob_fail.img val=found
if       (found=1) ush rm xxjob_fail.img

!Proc Startup Module***************************************************
write    "MSG: ***Starting 2pt Processing for Band &band"
tush      echo "***Starting 2pt Processing for Band &band" >> L1A_CAL_&"suffix".log 

!Calculate 9-digit Random Number as a unique temporary variable name
tcl2tcl   script=("source $env(AFIDS_TCL)/taehelp.tcl; ", +
         "expr round(1e9*rand())") strvar=id
write    "MSG: ***2pt Random Number = &id "

!Input L1A_RAW_PIX Module**********************************************
!Extract Raw DNs from L1A_RAW_PIX, 1 band, each 11264x5400 16bit integers.
!Convert hdf5 to vicar using gdal libraries.
write    "Beginning ush gdalinfo"
ush       gdalinfo &inph5i
write    "Beginning ush gdal_translate"
ush       gdal_translate -of VICAR -ot Int16 'HDF5:"&inph5i"://UncalibratedPixels/pixel_data_&band' &"outimg"/b&"band"_image.hlf
!Verify image size, if not 11264x5400, stop processing
form     &"outimg"/b&"band"_image.hlf format nl ns
write    "MSG: ***Input Image Size is: &nl Lines x &ns Samples "
if       ((nl<>11264)or(ns<>5400)) write "MSG: ***ERROR "&"outimg"/b&"band"_image.hlf" has Incorrect Image Size "
if       ((nl<>11264)or(ns<>5400)) goto error1
write    "MSG: ***Finished Reading L1A_RAW_PIX Band &band"
tush      echo "Finished Reading L1A_RAW_PIX Band &band" >> L1A_CAL_&"suffix".log
hist     &"outimg"/b&"band"_image.hlf sigma=sd mean=avg
tush      echo "Raw Band &band Mean=&avg SD=&sd" >> L1A_CAL_&"suffix".log
!Create Bad Stripes Mask
gen       xxa_&id nl=11264 ns=5400 ival=1 linc=0 sinc=0 'half
qsar      xxa_&id stripes_&id area=(+
          33,1,16,5400,-1,289,1,16,5400,-1,545,1,16,5400,-1, +
          801,1,16,5400,-1,1057,1,16,5400,-1,1313,1,16,5400,-1, +
          1569,1,16,5400,-1,1825,1,16,5400,-1,2081,1,16,5400,-1, +
          2337,1,16,5400,-1,2593,1,16,5400,-1,2849,1,16,5400,-1, +
          3105,1,16,5400,-1,3361,1,16,5400,-1,3617,1,16,5400,-1, +
          3873,1,16,5400,-1,4129,1,16,5400,-1,4385,1,16,5400,-1, +
          4641,1,16,5400,-1,4897,1,16,5400,-1,5153,1,16,5400,-1, +
          5409,1,16,5400,-1,5665,1,16,5400,-1,5921,1,16,5400,-1, +
          6177,1,16,5400,-1,6433,1,16,5400,-1,6689,1,16,5400,-1, +
          6945,1,16,5400,-1,7201,1,16,5400,-1,7457,1,16,5400,-1, +
          7713,1,16,5400,-1,7969,1,16,5400,-1,8225,1,16,5400,-1, +
          8481,1,16,5400,-1,8737,1,16,5400,-1,8993,1,16,5400,-1, +
          9249,1,16,5400,-1,9505,1,16,5400,-1,9761,1,16,5400,-1, +
          10017,1,16,5400,-1,10273,1,16,5400,-1,10529,1,16,5400,-1, +
          10785,1,16,5400,-1,11041,1,16,5400,-1)
hist      stripes_&id 'nohi
!Create Missing or Corrupted Data Binary 0/1 Mask
if       (band=1)  !B1 (SWIR) 0DN is valid
 f2      (&"outimg"/b&"band"_image.hlf,stripes_&id) mask_&id +
          func="((in2==1).AND.(in1>=0).AND.(in1<=32000)).OR.((in2==0)*(-1))" !Good DN=1; Bad DN=0; Stripe=-1
else-if  ((band=2)or(band=6)) !TIR 0DN is not valid
 f2      (&"outimg"/b&"band"_image.hlf,stripes_&id) mask_&id +
          func="((in2==1).AND.(in1>=0).AND.(in1<=32000)).OR.((in2==0)*(-1))" !Good DN=1; Bad DN=0; Stripe=-1
else
 f2      &"outimg"/b&"band"_image.hlf mask_&id +
          func="((in1>0).AND.(in1<=32000))" !Good DN=1; Bad DN=0
end-if
hist      mask_&id sigma=sd mean=avg
tush      echo "Histogram 0/1 Mask Mean=&avg SD=&sd" >> L1A_CAL_&"suffix".log

!Input L1A_BB DN Module************************************************
!Extract Raw FPA DNs from L1A_BB, 1 band, both 325 and 295 BB files
!Log hdf5 to vicar using gdal libraries.
write    "Beginning ush gdalinfo"
ush       gdalinfo &inph5b
write    "Beginning ush gdal_translate"
ush       gdal_translate -of VICAR -ot Int16 'HDF5:"&inph5b"://BlackBodyPixels/b&"band"_blackbody_325' xxa_325_&id
ush       gdal_translate -of VICAR -ot Int16 'HDF5:"&inph5b"://BlackBodyPixels/b&"band"_blackbody_295' xxa_295_&id
!Verify 325BB image size, if not 11264x64, stop processing
form      xxa_325_&id format nl ns
write    "MSG: ***Input Band&"band" BB325 Image Size is: &nl Lines x &ns Samples "
if       ((nl<>11264)or(ns<>64)) write "MSG: ***ERROR "BB325" has Incorrect Image Size "
if       ((nl<>11264)or(ns<>64)) goto error1
!Verify 295BB image size, if not 11264x64, stop processing
form      xxa_295_&id format nl ns
write    "MSG: ***Input Band&"band" BB295 Image Size is: &nl Lines x &ns Samples "
if       ((nl<>11264)or(ns<>64)) write "MSG: ***ERROR "BB295" has Incorrect Image Size "
if       ((nl<>11264)or(ns<>64)) goto error1
write    "MSG: ***Finished Reading L1A_BB Band &band files"
tush      echo "Finished Reading L1A_BB Band &band files" >> L1A_CAL_&"suffix".log

!Average BB FPAs from 11264x64 to 11264x1
cform     xxa_325_&id xxa_&id oform=real
lave      xxa_&id xxb_&id 'hori 'quiet
flot      xxb_&id &"outbdn"/dn325b&"band".rel 'clock
cform     xxa_295_&id xxa_&id oform=real
lave      xxa_&id xxb_&id 'hori 'quiet
flot      xxb_&id &"outbdn"/dn295b&"band".rel 'clock
if       (band=1) goto jump1  !B1=SWIR (No Radiance)

!Gain/Offset Calculation Module****************************************
!Convert image DN to spectral radiance using gain & offset
!Calculate Offset (a)
f2       (&"inprad"/b&"band"_325.rel, +
          &"inprad"/b&"band"_295.rel,+
          &"outbdn"/dn325b&"band".rel,&"outbdn"/dn295b&"band".rel) xxoffs_&id +
          func="((in1*in4)-(in2*in3))/(in4-in3)" format=real
!Calculate Gain (b)
f2       (&"inprad"/b&"band"_325.rel, +
          &"inprad"/b&"band"_295.rel, +
          &"outbdn"/dn325b&"band".rel,&"outbdn"/dn295b&"band".rel) xxgain_&id +
          func="(in2-in1)/(in4-in3)" format=real
!Focal Plane gain/offset images are 11264x1, duplicate them to the size of input image.
!Output size is 11264 lines by 5400 samples; then apply Bad Data Mask 
size      xxoffs_&id xxd_&id size=(1,1,11264,5400) oform=real 'noin
f2        inp=(xxd_&id,mask_&id) out=&"outwat"/b&"band"_offset.rel +
          func="(in1*(in2==1))+((in2==0)*(-9999))+((in2==(-1))*(-9998))" format=real
size      xxgain_&id xxd_&id size=(1,1,11264,5400) oform=real 'noin
f2        inp=(xxd_&id,mask_&id) out=&"outwat"/b&"band"_gain.rel +
          func="(in1*(in2==1))+((in2==0)*(-9999))+((in2==(-1))*(-9998))" format=real
write    "MSG: ***Finished Creating Gain/Offsets for Band &band"
tush      echo "Finished Creating Gain/Offsets for Band &band" >> L1A_CAL_&"suffix".log

!2-Point Conversion Module*********************************************
!DN to Radiance two-point conversion: R=a+(b*DN)
!2point Calibration
! Optionally output radiance data
if       (radout=0) goto skip2
f2       (&"outwat"/b&"band"_offset.rel,&"outwat"/b&"band"_gain.rel,&"outimg"/b&"band"_image.hlf) +
          xxe_&id +
          func="in1+(in2*in3)" format=real
f2        inp=(xxe_&id,mask_&id) out=&"outwat"/b&"band"_rad.rel +
          func="(in1*(in2==1))+((in2==0)*(-9999))+((in2==(-1))*(-9998))" format=real
write    "MSG: ***Finished 2pt DN-to-Rad Conversion for Band &band"
tush      echo "Finished 2pt DN-to-Rad Conversion for Band &band" >> L1A_CAL_&"suffix".log
if       (debug>0)
!Remove -9998 (Dropped Lines) from histogram (Set to zero). Retain -9999 (Bad Data).
 f2       &"outwat"/b&"band"_rad.rel xxb_&id func="(in1!=(-9998))*in1"
 hist     xxb_&id sigma=sd mean=avg count=count 'exclude
 tush     echo "Histogram Mean=&avg SD=&sd Count=&count" >> L1A_CAL_&"suffix".log
end-if

skip2>
!Radiance-to-Temperature Conversion Module*****************************
!Convert Radiance Product to Temperature Kelvin for TESTING Purposes
!Source: http://ncc.nesdis.noaa.gov/data/planck.html
if       (radout= 0) goto skip3
if       (rad2k = 0) goto skip3
write    "cw = &cw"
write    "c1 = &c1"
write    "c2 = &c2"
f2       (&"outwat"/b&"band"_rad.rel) xxe_&id +
          func="&c2/(&cw*(alog(&c1/(&cw**5*in1)+1)))" 'half
f2        inp=(xxe_&id,mask_&id) out=&"outwat"/b&"band"_temp.hlf +
          func="(in1*(in2==1))+((in2==0)*(-9999))+((in2==(-1))*(-9998))" format=half
write    "MSG: ***Finished Rad-to-Temp Conversion for Band &band"
tush      echo "Finished Rad-to-Temp Conversion for Band &band" >> L1A_CAL_&"suffix".log
if       (debug>0)
!Remove -9998 (Dropped Lines) from histogram (Set to zero). Retain -9999 (Bad Data).
 f2       &"outwat"/b&"band"_temp.hlf xxb_&id func="(in1!=(-9998))*in1"
 hist     xxb_&id sigma=sd mean=avg count=count 'exclude
 tush     echo "Histogram Mean=&avg SD=&sd Count=&count" >> L1A_CAL_&"suffix".log
end-if
goto      skip3   !Bands 2-6 skip over SWIR processing

jump1>
!SWIR B1 Dark Current Module*******************************************
!Subtact Dark Current from SWIR Band1
!Size Duplicate BB Dark Current FPA to match image size 11264x1 -> 11264x5400
size      &"outbdn"/dn325b&"band".rel xxdc325_&id size=(1,1,11264,5400) 'noin
size      &"outbdn"/dn295b&"band".rel xxdc295_&id size=(1,1,11264,5400) 'noin
!Average Dark Current FPA images
f2       (xxdc325_&id,xxdc295_&id) xxa_&id func="(in1+in2)/2"
!Subtract Dark Current from SWIR Image (No Negative values)
f2       (&"outimg"/b1_image.hlf,xxa_&id) xxe_&id +
          func="(in1-in2)*((in1-in2)>=0)" format=half
f2        inp=(xxe_&id,mask_&id) out=&"outwat"/b1_dcc.hlf +
          func="(in1*(in2==1))+((in2==0)*(-9999))+((in2==(-1))*(-9998))" format=half
write    "MSG: ***Finished DC Subtraction for Band &band"
tush      echo "Finished DC Subtraction for Band &band" >> L1A_CAL_&"suffix".log
if       (debug>0)
 hist     &"outwat"/b1_dcc.hlf sigma=sd mean=avg count=count
 tush     echo "Histogram Mean=&avg SD=&sd Count=&count" >> L1A_CAL_&"suffix".log
end-if

skip3>
!Program Ending Maintenance Module*************************************
!Successful Completion:
goto      theend

error1>
!Miscellaneous Error:
write    "MSG: ***Unknown Error --- Aborting"
write    "MSG: ***L1A_2PT job Failed"
tush      echo ***Unknown Error --- Aborting >> L1A_CAL_&"suffix".log
tush      echo ***L1A_2PT Job Failed >> L1A_CAL_&"suffix".log
ush       echo VICAR_RESULT-1-[Job Failed] >> L1A_CAL_&"suffix".log
gen       xxjob_fail.img nl=10 ns=10 ival=0 linc=0 sinc=0 'byte
let       $SFI=-1

theend>
if          ((debug=0)or(debug=2))ush rm -f *_&id *.aux.xml &"outimg"/*.aux.xml
end-proc
