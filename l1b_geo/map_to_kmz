#! /usr/bin/env python
#
# Create a KMZ file giving a picture of the MAP data
import geocal
import subprocess
import h5py
import os
import tempfile

version = "1.0"
usage='''Usage:
  map_to_kmz [options] <input_file> <output_file>
  map_to_kmz -h | --help
  map_to_kmz -v | --version

This produces a KMZ file with a picture of the MAP data. Note that Google
only seems to work with "North is up" data, so the map data produced for
this needs to have north up.

This displays bands 1, 3 and 5 as RGB. We do a Gaussian stretch on all the 
data - so these aren't actual data values or anything (need map_to_gdal if you
want to import into QGIS or something like that).

Options:
  -h --help         
       Print this message

  -v --version      
       Print program version
'''

args = geocal.docopt_simple(usage, version=version)
infile = os.path.abspath(args.input_file)
outfile = os.path.abspath(args.output_file)
outdir = os.path.dirname(outfile)
# For debugging, if we need to keep tempdir aroudn
#if(True):
#    os.chdir("Temp")
with geocal.in_tempdir():
    subprocess.run(["map_to_gdal", infile, "map.vrt"])
    cmd_merge = ["gdalbuildvrt", "-separate", "map_scaled.vrt"]
    for b in (1,3,5):
        cmd = ["gdal_calc.py", "--type=Float32", 
               "-A", "map.vrt", "--A_band=%d" % b,
               "--outfile=map_b%d.tif" % b,
               "--calc=100*A*(A>0)", "--NoDataValue=0"]
        subprocess.run(cmd)
        subprocess.run(["gdal_translate", "-of", "VICAR", "-ot", "Int16",
                        "map_b%d.tif" % b, "map_b%d.img" %b])
        subprocess.run(["vicarb",
          "stretch map_b%d.img map_b%d_scaled.img 'gauss DNMIN=0 DNMAX=255" % (b, b)])
        cmd_merge.append("map_b%d_scaled.img" % b)
    subprocess.run(cmd_merge)
    subprocess.run(["gdal_translate", "-of", "VRT", "-ot", "Byte",
                    "-a_nodata", "0",
                    "map_scaled.vrt",
                    "map_scaled2.vrt"])
    subprocess.run(["gdal_translate", "-of", "KMLSUPEROVERLAY", "map_scaled2.vrt",
                    outfile, "-co", "FORMAT=PNG"])


          

