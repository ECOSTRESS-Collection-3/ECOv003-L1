AFIDS_DVD_DATE = 10-21-2019
AFIDS_FULL_VERSION = 1.28
TENSORFLOW_WHEEL = tensorflow-1.14.0-cp37-cp37m-linux_x86_64.whl
ECOSTRESS_DEPENDENCY_VERSION = 1.0

# We pull this out, because --squash is still experimental and not available
# everywhere. You can set this to a blank string to turn this off if needed.
# Images will be larger, but this might not matter.
EXTRA_DOCKER_FLAG= --squash

afids-image: docker/afids-docker/afids-$(AFIDS_DVD_DATE).iso
	-rm $(abs_srcdir)/docker/afids-docker/afids.iso
	ln -s ./$(notdir $<) $(abs_srcdir)/docker/afids-docker/afids.iso
	docker build $(EXTRA_DOCKER_FLAG) -t ecostress/afids:$(AFIDS_FULL_VERSION) $(abs_srcdir)/docker/afids-docker

ecostress-dependency-image:
	cp -r $(abs_srcdir)/docker/ecostress-dependency-repo/ $(abs_srcdir)/docker/ecostress-dependency-docker
	docker build $(EXTRA_DOCKER_FLAG) -t ecostress/ecostress-dependency:$(ECOSTRESS_DEPENDENCY_VERSION) $(abs_srcdir)/docker/ecostress-dependency-docker
	rm -r $(abs_srcdir)/docker/ecostress-dependency-docker/ecostress-dependency-repo

# yum install 

# To record the exact version of packages we install for python, we
# capture these as RPMs. That way we can install the same set of packages
# each time in an image. Not sure that recording this as a package rather
# than just a docker image is worth the extra work, but it isn't a lot
# and for now at least we'll do this.
# Note if you run this interactivately to debug something, you can
# connect to the container with docker exec -it $(cat docker_run.id) bash
#
# I don't really understand the mounting permissions. It seems in some
# way that docker root goes to eco-docker. For now, just open up permissions
# and we sort this out. Should be better way
#
# We don't have this as a Dockerfile because we don't care about this image
# after we are done - we are just using the container to generate RPMs

create-ecostress-dependency-repo:
	mkdir -p ecostress-dependency-repo
	chmod a+w ecostress-dependency-repo
	cp $(srcdir)/docker/ecostress-dependency-repo/ecostress-python-package.spec ecostress-dependency-repo
	cp $(abs_srcdir)/thirdparty/$(TENSORFLOW_WHEEL) ecostress-dependency-repo
	docker run -t -d --cidfile=docker_run.id --mount type=bind,src=$(abs_builddir)/ecostress-dependency-repo,dst=/media/ecostress-dependency-repo ecostress/afids:$(AFIDS_FULL_VERSION) /bin/bash
	docker exec $$(cat docker_run.id) bash -c "yum install rpm-build createrepo gcc-gfortran gcc gcc-c++ -y"
	docker exec $$(cat docker_run.id) bash -c "export PATH=/opt/afids_support/bin:$${PATH} && export LD_LIBRARY_PATH=/opt/afids_support/lib:/opt/afids_support/lib64:$${LD_LIBRARY_PATH} && mkdir -p /root/rpmbuild/SOURCES && cp /media/ecostress-dependency-repo/$(TENSORFLOW_WHEEL) /root/rpmbuild/SOURCES && rpmbuild -ba /media/ecostress-dependency-repo/ecostress-python-package.spec && mv /root/rpmbuild/RPMS/x86_64/ecostress-python-package*.x86_64.rpm /media/ecostress-dependency-repo && cd /media/ecostress-dependency-repo && createrepo . && chmod a+w -R repodata"
	rm $(builddir)/ecostress-dependency-repo/$(TENSORFLOW_WHEEL)
	cp -fr $(builddir)/ecostress-dependency-repo/* $(srcdir)/docker/ecostress-dependency-repo
	docker container stop $$(cat docker_run.id)

# source /opt/afids/setup_afids_env.sh

EXTRA_DIST+= docker/README
EXTRA_DIST+= docker/afids-docker/Dockerfile
EXTRA_DIST+= docker/ecostress-dependency-repo/ecostress-dependency.repo
EXTRA_DIST+= docker/ecostress-dependency-repo/ecostress-python-package.spec
# Leave out repo and package because of the size. We can reevaluate that
# if needed
EXTRA_DIST+= docker/ecostress-dependency-docker/Dockerfile
