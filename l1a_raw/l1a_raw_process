#! /usr/bin/env python
#
# This runs the L1A Raw process.

from geocal import *
from ecostress import *
import os
import re

version = "1.0"
usage='''Usage:
  l1a_raw_process [options] <run_config>
  l1a_raw_process -h | --help
  l1a_raw_process -v | --version

This runs the L1A Raw process.

Options:
  -h --help         
       Print this message

  -v --version      
       Print program version
'''

args = docopt_simple(usage, version=version)

# Can use this to wait a short time so we can attach strace to this
# process, useful to find all the files that we are accessing.
if(False):
    print("Waiting a short time")
    import time
    time.sleep(20)

# Explicitly list input file
config = RunConfig(args.run_config)

l0b = os.path.abspath(config["InputFileGroup", "L0B"])
scene_file = os.path.abspath(config["StaticAncillaryFileGroup", "Scene"])
osp_dir = config["StaticAncillaryFileGroup", "L1A_OSP_DIR"]
prod_dir = config["ProductPathGroup", "ProductPath"]
shortname =  config["ProductPathGroup","ShortName"]
print("L1A_RAW_PROCESS L0B=%s SCENE_FILE=%s PROD_DIR=%s OSP_DIR=%s SHORT=%s" % (l0b, scene_file, prod_dir, osp_dir, shortname ) )

makedirs_p(prod_dir)
os.chdir(prod_dir)

scn = prod_dir + os.path.splitext( os.path.basename( l0b ) )[0] + '.scn'
cmd = 'python ' + osp_dir + 'l0b_scan.py ' + l0b + ' > ' + scn
print("Running CMD %s" %cmd )
stat = os.system( cmd )
if stat > 0:
  print("Scan error %d" %stat )
  exit -1
sp = os.path.dirname(scene_file)
cmd = 'grep Scene ' + scn
p = os.popen(cmd)
sf = p.read().rstrip()
p.close()
scene_file = sp + '/' + sf
print("Adjusted SCENE_FILE=%s" %scene_file )

l1arawpix = L1aRawPixGenerate(l0b, osp_dir, scene_file)
l1arawpix.run()

